// Mocks generated by Mockito 5.0.9 from annotations
// in rick_morty/test/bloc/episodes_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:domain/character_use_case.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:models/episode_response.dart' as _i5;
import 'package:models/result.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeResult<T> extends _i1.Fake implements _i2.Result<T> {}

/// A class which mocks [CharacterUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterUseCase extends _i1.Mock implements _i3.CharacterUseCase {
  MockCharacterUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Result<_i5.EpisodesResponse>> getEpisodes() =>
      (super.noSuchMethod(Invocation.method(#getEpisodes, []),
              returnValue: Future<_i2.Result<_i5.EpisodesResponse>>.value(
                  _FakeResult<_i5.EpisodesResponse>()))
          as _i4.Future<_i2.Result<_i5.EpisodesResponse>>);
}
